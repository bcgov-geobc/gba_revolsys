/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.gdal.gdal;

import org.gdal.gdalconst.gdalconstConstants;

public class Band extends MajorObject {
  protected static long getCPtr(final Band obj) {
    return obj == null ? 0 : obj.swigCPtr;
  }

  private long swigCPtr;

  protected Band(final long cPtr, final boolean cMemoryOwn) {
    super(gdalJNI.SWIGBandUpcast(cPtr), cMemoryOwn);
    this.swigCPtr = cPtr;
  }

  public int Checksum() {
    return Checksum(0, 0, getXSize(), getYSize());
  }

  public int Checksum(final int xoff, final int yoff, final int xsize, final int ysize) {
    return gdalJNI.Band_Checksum(this.swigCPtr, this, xoff, yoff, xsize, ysize);
  }

  public void ComputeBandStats(final double[] argout) {
    gdalJNI.Band_ComputeBandStats__SWIG_1(this.swigCPtr, this, argout);
  }

  public void ComputeBandStats(final double[] argout, final int samplestep) {
    gdalJNI.Band_ComputeBandStats__SWIG_0(this.swigCPtr, this, argout, samplestep);
  }

  public void ComputeRasterMinMax(final double[] argout) {
    gdalJNI.Band_ComputeRasterMinMax__SWIG_1(this.swigCPtr, this, argout);
  }

  public void ComputeRasterMinMax(final double[] argout, final int approx_ok) {
    gdalJNI.Band_ComputeRasterMinMax__SWIG_0(this.swigCPtr, this, argout, approx_ok);
  }

  public int ComputeStatistics(final boolean approx_ok) {
    return gdalJNI.Band_ComputeStatistics__SWIG_6(this.swigCPtr, this, approx_ok);
  }

  public int ComputeStatistics(final boolean approx_ok, final double[] min) {
    return gdalJNI.Band_ComputeStatistics__SWIG_5(this.swigCPtr, this, approx_ok, min);
  }

  public int ComputeStatistics(final boolean approx_ok, final double[] min, final double[] max) {
    return gdalJNI.Band_ComputeStatistics__SWIG_4(this.swigCPtr, this, approx_ok, min, max);
  }

  public int ComputeStatistics(final boolean approx_ok, final double[] min, final double[] max,
    final double[] mean) {
    return gdalJNI.Band_ComputeStatistics__SWIG_3(this.swigCPtr, this, approx_ok, min, max, mean);
  }

  public int ComputeStatistics(final boolean approx_ok, final double[] min, final double[] max,
    final double[] mean, final double[] stddev) {
    return gdalJNI.Band_ComputeStatistics__SWIG_2(this.swigCPtr, this, approx_ok, min, max, mean,
      stddev);
  }

  public int ComputeStatistics(final boolean approx_ok, final double[] min, final double[] max,
    final double[] mean, final double[] stddev, final ProgressCallback callback) {
    return gdalJNI.Band_ComputeStatistics__SWIG_0(this.swigCPtr, this, approx_ok, min, max, mean,
      stddev, callback);
  }

  public int CreateMaskBand(final int nFlags) {
    return gdalJNI.Band_CreateMaskBand(this.swigCPtr, this, nFlags);
  }

  @Override
  public synchronized void delete() {
    if (this.swigCPtr != 0) {
      if (this.swigCMemOwn) {
        this.swigCMemOwn = false;
        throw new UnsupportedOperationException("C++ destructor does not have public access");
      }
      this.swigCPtr = 0;
    }
    super.delete();
  }

  public int Fill(final double real_fill) {
    return gdalJNI.Band_Fill__SWIG_1(this.swigCPtr, this, real_fill);
  }

  public int Fill(final double real_fill, final double imag_fill) {
    return gdalJNI.Band_Fill__SWIG_0(this.swigCPtr, this, real_fill, imag_fill);
  }

  public void FlushCache() {
    gdalJNI.Band_FlushCache(this.swigCPtr, this);
  }

  public int GetBand() {
    return gdalJNI.Band_GetBand(this.swigCPtr, this);
  }

  public void GetBlockSize(final int[] pnBlockXSize, final int[] pnBlockYSize) {
    gdalJNI.Band_GetBlockSize(this.swigCPtr, this, pnBlockXSize, pnBlockYSize);
  }

  public int GetBlockXSize() {
    final int[] anBlockXSize = new int[1];
    final int[] anBlockYSize = new int[1];
    GetBlockSize(anBlockXSize, anBlockYSize);
    return anBlockXSize[0];
  }

  public int GetBlockYSize() {
    final int[] anBlockXSize = new int[1];
    final int[] anBlockYSize = new int[1];
    GetBlockSize(anBlockXSize, anBlockYSize);
    return anBlockYSize[0];
  }

  public java.util.Vector GetCategoryNames() {
    return gdalJNI.Band_GetCategoryNames(this.swigCPtr, this);
  }

  public int GetColorInterpretation() {
    return gdalJNI.Band_GetColorInterpretation(this.swigCPtr, this);
  }

  public ColorTable GetColorTable() {
    final long cPtr = gdalJNI.Band_GetColorTable(this.swigCPtr, this);
    ColorTable ret = null;
    if (cPtr != 0) {
      ret = new ColorTable(cPtr, false);
      ret.addReference(this);
    }
    return ret;
  }

  public int getDataType() {
    return gdalJNI.Band_DataType_get(this.swigCPtr, this);
  }

  public int GetDefaultHistogram(final double[] min_ret, final double[] max_ret,
    final int[][] buckets_ret) {
    return gdalJNI.Band_GetDefaultHistogram__SWIG_3(this.swigCPtr, this, min_ret, max_ret,
      buckets_ret);
  }

  public int GetDefaultHistogram(final double[] min_ret, final double[] max_ret,
    final int[][] buckets_ret, final boolean force) {
    return gdalJNI.Band_GetDefaultHistogram__SWIG_2(this.swigCPtr, this, min_ret, max_ret,
      buckets_ret, force);
  }

  public int GetDefaultHistogram(final double[] min_ret, final double[] max_ret,
    final int[][] buckets_ret, final boolean force, final ProgressCallback callback) {
    return gdalJNI.Band_GetDefaultHistogram__SWIG_0(this.swigCPtr, this, min_ret, max_ret,
      buckets_ret, force, callback);
  }

  public RasterAttributeTable GetDefaultRAT() {
    final long cPtr = gdalJNI.Band_GetDefaultRAT(this.swigCPtr, this);
    return cPtr == 0 ? null : new RasterAttributeTable(cPtr, false);
  }

  public int GetHistogram(final double min, final double max, final int[] buckets) {
    return gdalJNI.Band_GetHistogram__SWIG_2(this.swigCPtr, this, min, max, buckets);
  }

  public int GetHistogram(final double min, final double max, final int[] buckets,
    final boolean include_out_of_range, final boolean approx_ok) {
    return gdalJNI.Band_GetHistogram__SWIG_1(this.swigCPtr, this, min, max, buckets,
      include_out_of_range, approx_ok);
  }

  public int GetHistogram(final double min, final double max, final int[] buckets,
    final boolean include_out_of_range, final boolean approx_ok, final ProgressCallback callback) {
    return gdalJNI.Band_GetHistogram__SWIG_0(this.swigCPtr, this, min, max, buckets,
      include_out_of_range, approx_ok, callback);
  }

  public int GetHistogram(final int[] buckets) {
    return gdalJNI.Band_GetHistogram__SWIG_3(this.swigCPtr, this, buckets);
  }

  public Band GetMaskBand() {
    final long cPtr = gdalJNI.Band_GetMaskBand(this.swigCPtr, this);
    Band ret = null;
    if (cPtr != 0) {
      ret = new Band(cPtr, false);
      ret.addReference(this);
    }
    return ret;
  }

  public int GetMaskFlags() {
    return gdalJNI.Band_GetMaskFlags(this.swigCPtr, this);
  }

  public void GetMaximum(final Double[] val) {
    gdalJNI.Band_GetMaximum(this.swigCPtr, this, val);
  }

  public void GetMinimum(final Double[] val) {
    gdalJNI.Band_GetMinimum(this.swigCPtr, this, val);
  }

  public void GetNoDataValue(final Double[] val) {
    gdalJNI.Band_GetNoDataValue(this.swigCPtr, this, val);
  }

  public void GetOffset(final Double[] val) {
    gdalJNI.Band_GetOffset(this.swigCPtr, this, val);
  }

  public Band GetOverview(final int i) {
    final long cPtr = gdalJNI.Band_GetOverview(this.swigCPtr, this, i);
    Band ret = null;
    if (cPtr != 0) {
      ret = new Band(cPtr, false);
      ret.addReference(this);
    }
    return ret;
  }

  public int GetOverviewCount() {
    return gdalJNI.Band_GetOverviewCount(this.swigCPtr, this);
  }

  public java.util.Vector GetRasterCategoryNames() {
    return gdalJNI.Band_GetRasterCategoryNames(this.swigCPtr, this);
  }

  public int GetRasterColorInterpretation() {
    return gdalJNI.Band_GetRasterColorInterpretation(this.swigCPtr, this);
  }

  public ColorTable GetRasterColorTable() {
    final long cPtr = gdalJNI.Band_GetRasterColorTable(this.swigCPtr, this);
    ColorTable ret = null;
    if (cPtr != 0) {
      ret = new ColorTable(cPtr, false);
      ret.addReference(this);
    }
    return ret;
  }

  // Preferred name to match C++ API
  public int GetRasterDataType() {
    return getDataType();
  }

  public void GetScale(final Double[] val) {
    gdalJNI.Band_GetScale(this.swigCPtr, this, val);
  }

  public int GetStatistics(final boolean approx_ok, final boolean force, final double[] min,
    final double[] max, final double[] mean, final double[] stddev) {
    return GetStatistics(approx_ok ? 1 : 0, force ? 1 : 0, min, max, mean, stddev);
  }

  public int GetStatistics(final int approx_ok, final int force, final double[] min,
    final double[] max, final double[] mean, final double[] stddev) {
    return gdalJNI.Band_GetStatistics(this.swigCPtr, this, approx_ok, force, min, max, mean,
      stddev);
  }

  public String GetUnitType() {
    return gdalJNI.Band_GetUnitType(this.swigCPtr, this);
  }

  public int getXSize() {
    return gdalJNI.Band_XSize_get(this.swigCPtr, this);
  }

  // Preferred name to match C++ API
  public int GetXSize() {
    return getXSize();
  }

  public int getYSize() {
    return gdalJNI.Band_YSize_get(this.swigCPtr, this);
  }

  // Preferred name to match C++ API
  public int GetYSize() {
    return getYSize();
  }

  public boolean HasArbitraryOverviews() {
    return gdalJNI.Band_HasArbitraryOverviews(this.swigCPtr, this);
  }

  public int ReadBlock_Direct(final int nXBlockOff, final int nYBlockOff,
    final java.nio.ByteBuffer nioBuffer) {
    return gdalJNI.Band_ReadBlock_Direct(this.swigCPtr, this, nXBlockOff, nYBlockOff, nioBuffer);
  }

  public int ReadRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final byte[] array) {
    return ReadRaster(xoff, yoff, xsize, ysize, xsize, ysize, gdalconstConstants.GDT_Byte, array);
  }

  public int ReadRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final double[] array) {
    return ReadRaster(xoff, yoff, xsize, ysize, xsize, ysize, gdalconstConstants.GDT_Float64,
      array);
  }

  public int ReadRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final float[] array) {
    return ReadRaster(xoff, yoff, xsize, ysize, xsize, ysize, gdalconstConstants.GDT_Float32,
      array);
  }

  public int ReadRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_type, final byte[] array) {
    return ReadRaster(xoff, yoff, xsize, ysize, xsize, ysize, buf_type, array);
  }

  public int ReadRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_type, final double[] array) {
    return ReadRaster(xoff, yoff, xsize, ysize, xsize, ysize, buf_type, array);
  }

  public int ReadRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_type, final float[] array) {
    return ReadRaster(xoff, yoff, xsize, ysize, xsize, ysize, buf_type, array);
  }

  public int ReadRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final byte[] regularArrayOut) {
    return gdalJNI.Band_ReadRaster__SWIG_2(this.swigCPtr, this, xoff, yoff, xsize, ysize, buf_xsize,
      buf_ysize, buf_type, regularArrayOut);
  }

  public int ReadRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final byte[] regularArrayOut,
    final int nPixelSpace) {
    return gdalJNI.Band_ReadRaster__SWIG_1(this.swigCPtr, this, xoff, yoff, xsize, ysize, buf_xsize,
      buf_ysize, buf_type, regularArrayOut, nPixelSpace);
  }

  public int ReadRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final byte[] regularArrayOut,
    final int nPixelSpace, final int nLineSpace) {
    return gdalJNI.Band_ReadRaster__SWIG_0(this.swigCPtr, this, xoff, yoff, xsize, ysize, buf_xsize,
      buf_ysize, buf_type, regularArrayOut, nPixelSpace, nLineSpace);
  }

  public int ReadRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final double[] regularArrayOut) {
    return gdalJNI.Band_ReadRaster__SWIG_14(this.swigCPtr, this, xoff, yoff, xsize, ysize,
      buf_xsize, buf_ysize, buf_type, regularArrayOut);
  }

  public int ReadRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final double[] regularArrayOut,
    final int nPixelSpace) {
    return gdalJNI.Band_ReadRaster__SWIG_13(this.swigCPtr, this, xoff, yoff, xsize, ysize,
      buf_xsize, buf_ysize, buf_type, regularArrayOut, nPixelSpace);
  }

  public int ReadRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final double[] regularArrayOut,
    final int nPixelSpace, final int nLineSpace) {
    return gdalJNI.Band_ReadRaster__SWIG_12(this.swigCPtr, this, xoff, yoff, xsize, ysize,
      buf_xsize, buf_ysize, buf_type, regularArrayOut, nPixelSpace, nLineSpace);
  }

  public int ReadRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final float[] regularArrayOut) {
    return gdalJNI.Band_ReadRaster__SWIG_11(this.swigCPtr, this, xoff, yoff, xsize, ysize,
      buf_xsize, buf_ysize, buf_type, regularArrayOut);
  }

  public int ReadRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final float[] regularArrayOut,
    final int nPixelSpace) {
    return gdalJNI.Band_ReadRaster__SWIG_10(this.swigCPtr, this, xoff, yoff, xsize, ysize,
      buf_xsize, buf_ysize, buf_type, regularArrayOut, nPixelSpace);
  }

  public int ReadRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final float[] regularArrayOut,
    final int nPixelSpace, final int nLineSpace) {
    return gdalJNI.Band_ReadRaster__SWIG_9(this.swigCPtr, this, xoff, yoff, xsize, ysize, buf_xsize,
      buf_ysize, buf_type, regularArrayOut, nPixelSpace, nLineSpace);
  }

  public int ReadRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final int[] regularArrayOut) {
    return gdalJNI.Band_ReadRaster__SWIG_8(this.swigCPtr, this, xoff, yoff, xsize, ysize, buf_xsize,
      buf_ysize, buf_type, regularArrayOut);
  }

  public int ReadRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final int[] regularArrayOut,
    final int nPixelSpace) {
    return gdalJNI.Band_ReadRaster__SWIG_7(this.swigCPtr, this, xoff, yoff, xsize, ysize, buf_xsize,
      buf_ysize, buf_type, regularArrayOut, nPixelSpace);
  }

  public int ReadRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final int[] regularArrayOut,
    final int nPixelSpace, final int nLineSpace) {
    return gdalJNI.Band_ReadRaster__SWIG_6(this.swigCPtr, this, xoff, yoff, xsize, ysize, buf_xsize,
      buf_ysize, buf_type, regularArrayOut, nPixelSpace, nLineSpace);
  }

  public int ReadRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final short[] regularArrayOut) {
    return gdalJNI.Band_ReadRaster__SWIG_5(this.swigCPtr, this, xoff, yoff, xsize, ysize, buf_xsize,
      buf_ysize, buf_type, regularArrayOut);
  }

  public int ReadRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final short[] regularArrayOut,
    final int nPixelSpace) {
    return gdalJNI.Band_ReadRaster__SWIG_4(this.swigCPtr, this, xoff, yoff, xsize, ysize, buf_xsize,
      buf_ysize, buf_type, regularArrayOut, nPixelSpace);
  }

  public int ReadRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final short[] regularArrayOut,
    final int nPixelSpace, final int nLineSpace) {
    return gdalJNI.Band_ReadRaster__SWIG_3(this.swigCPtr, this, xoff, yoff, xsize, ysize, buf_xsize,
      buf_ysize, buf_type, regularArrayOut, nPixelSpace, nLineSpace);
  }

  public int ReadRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_type, final int[] array) {
    return ReadRaster(xoff, yoff, xsize, ysize, xsize, ysize, buf_type, array);
  }

  public int ReadRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_type, final short[] array) {
    return ReadRaster(xoff, yoff, xsize, ysize, xsize, ysize, buf_type, array);
  }

  public int ReadRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int[] array) {
    return ReadRaster(xoff, yoff, xsize, ysize, xsize, ysize, gdalconstConstants.GDT_Int32, array);
  }

  public int ReadRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final short[] array) {
    return ReadRaster(xoff, yoff, xsize, ysize, xsize, ysize, gdalconstConstants.GDT_Int16, array);
  }

  public java.nio.ByteBuffer ReadRaster_Direct(final int xoff, final int yoff, final int xsize,
    final int ysize) {
    return ReadRaster_Direct(xoff, yoff, xsize, ysize, xsize, ysize, gdalconstConstants.GDT_Byte);
  }

  public java.nio.ByteBuffer ReadRaster_Direct(final int xoff, final int yoff, final int xsize,
    final int ysize, final int buf_type) {
    return ReadRaster_Direct(xoff, yoff, xsize, ysize, xsize, ysize, buf_type);
  }

  public java.nio.ByteBuffer ReadRaster_Direct(final int xoff, final int yoff, final int xsize,
    final int ysize, final int buf_xsize, final int buf_ysize, final int buf_type) {
    final long buf_size = buf_xsize * buf_ysize * (gdal.GetDataTypeSize(buf_type) / 8);
    if ((int)buf_size != buf_size) {
      throw new OutOfMemoryError();
    }
    final java.nio.ByteBuffer nioBuffer = java.nio.ByteBuffer.allocateDirect((int)buf_size);
    final int ret = ReadRaster_Direct(xoff, yoff, xsize, ysize, buf_xsize, buf_ysize, buf_type,
      nioBuffer);
    if (ret == gdalconstConstants.CE_None) {
      return nioBuffer;
    } else {
      return null;
    }
  }

  public int ReadRaster_Direct(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type,
    final java.nio.ByteBuffer nioBuffer) {
    return gdalJNI.Band_ReadRaster_Direct__SWIG_2(this.swigCPtr, this, xoff, yoff, xsize, ysize,
      buf_xsize, buf_ysize, buf_type, nioBuffer);
  }

  public int ReadRaster_Direct(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type,
    final java.nio.ByteBuffer nioBuffer, final int nPixelSpace) {
    return gdalJNI.Band_ReadRaster_Direct__SWIG_1(this.swigCPtr, this, xoff, yoff, xsize, ysize,
      buf_xsize, buf_ysize, buf_type, nioBuffer, nPixelSpace);
  }

  public int ReadRaster_Direct(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type,
    final java.nio.ByteBuffer nioBuffer, final int nPixelSpace, final int nLineSpace) {
    return gdalJNI.Band_ReadRaster_Direct__SWIG_0(this.swigCPtr, this, xoff, yoff, xsize, ysize,
      buf_xsize, buf_ysize, buf_type, nioBuffer, nPixelSpace, nLineSpace);
  }

  public int ReadRaster_Direct(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final java.nio.ByteBuffer nioBuffer) {
    return ReadRaster_Direct(xoff, yoff, xsize, ysize, buf_xsize, buf_ysize,
      gdalconstConstants.GDT_Byte, nioBuffer);
  }

  public int ReadRaster_Direct(final int xoff, final int yoff, final int xsize, final int ysize,
    final java.nio.ByteBuffer nioBuffer) {
    return ReadRaster_Direct(xoff, yoff, xsize, ysize, xsize, ysize, gdalconstConstants.GDT_Byte,
      nioBuffer);
  }

  public int SetCategoryNames(final java.util.Vector papszCategoryNames) {
    return gdalJNI.Band_SetCategoryNames(this.swigCPtr, this, papszCategoryNames);
  }

  public int SetColorInterpretation(final int val) {
    return gdalJNI.Band_SetColorInterpretation(this.swigCPtr, this, val);
  }

  public int SetColorTable(final ColorTable arg) {
    return gdalJNI.Band_SetColorTable(this.swigCPtr, this, ColorTable.getCPtr(arg), arg);
  }

  public int SetDefaultHistogram(final double min, final double max, final int[] buckets_in) {
    return gdalJNI.Band_SetDefaultHistogram(this.swigCPtr, this, min, max, buckets_in);
  }

  public int SetDefaultRAT(final RasterAttributeTable table) {
    return gdalJNI.Band_SetDefaultRAT(this.swigCPtr, this, RasterAttributeTable.getCPtr(table),
      table);
  }

  public int SetNoDataValue(final double d) {
    return gdalJNI.Band_SetNoDataValue(this.swigCPtr, this, d);
  }

  public int SetOffset(final double val) {
    return gdalJNI.Band_SetOffset(this.swigCPtr, this, val);
  }

  public int SetRasterCategoryNames(final java.util.Vector names) {
    return gdalJNI.Band_SetRasterCategoryNames(this.swigCPtr, this, names);
  }

  public int SetRasterColorInterpretation(final int val) {
    return gdalJNI.Band_SetRasterColorInterpretation(this.swigCPtr, this, val);
  }

  public int SetRasterColorTable(final ColorTable arg) {
    return gdalJNI.Band_SetRasterColorTable(this.swigCPtr, this, ColorTable.getCPtr(arg), arg);
  }

  public int SetScale(final double val) {
    return gdalJNI.Band_SetScale(this.swigCPtr, this, val);
  }

  public int SetStatistics(final double min, final double max, final double mean,
    final double stddev) {
    return gdalJNI.Band_SetStatistics(this.swigCPtr, this, min, max, mean, stddev);
  }

  public int SetUnitType(final String val) {
    return gdalJNI.Band_SetUnitType(this.swigCPtr, this, val);
  }

  public int WriteBlock_Direct(final int nXBlockOff, final int nYBlockOff,
    final java.nio.ByteBuffer nioBuffer) {
    return gdalJNI.Band_WriteBlock_Direct(this.swigCPtr, this, nXBlockOff, nYBlockOff, nioBuffer);
  }

  public int WriteRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final byte[] array) {
    return WriteRaster(xoff, yoff, xsize, ysize, xsize, ysize, gdalconstConstants.GDT_Byte, array);
  }

  public int WriteRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final double[] array) {
    return WriteRaster(xoff, yoff, xsize, ysize, xsize, ysize, gdalconstConstants.GDT_Float64,
      array);
  }

  public int WriteRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final float[] array) {
    return WriteRaster(xoff, yoff, xsize, ysize, xsize, ysize, gdalconstConstants.GDT_Float32,
      array);
  }

  public int WriteRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_type, final byte[] array) {
    return WriteRaster(xoff, yoff, xsize, ysize, xsize, ysize, buf_type, array);
  }

  public int WriteRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_type, final double[] array) {
    return WriteRaster(xoff, yoff, xsize, ysize, xsize, ysize, buf_type, array);
  }

  public int WriteRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_type, final float[] array) {
    return WriteRaster(xoff, yoff, xsize, ysize, xsize, ysize, buf_type, array);
  }

  public int WriteRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final byte[] regularArrayIn) {
    return gdalJNI.Band_WriteRaster__SWIG_2(this.swigCPtr, this, xoff, yoff, xsize, ysize,
      buf_xsize, buf_ysize, buf_type, regularArrayIn);
  }

  public int WriteRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final byte[] regularArrayIn,
    final int nPixelSpace) {
    return gdalJNI.Band_WriteRaster__SWIG_1(this.swigCPtr, this, xoff, yoff, xsize, ysize,
      buf_xsize, buf_ysize, buf_type, regularArrayIn, nPixelSpace);
  }

  public int WriteRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final byte[] regularArrayIn,
    final int nPixelSpace, final int nLineSpace) {
    return gdalJNI.Band_WriteRaster__SWIG_0(this.swigCPtr, this, xoff, yoff, xsize, ysize,
      buf_xsize, buf_ysize, buf_type, regularArrayIn, nPixelSpace, nLineSpace);
  }

  public int WriteRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final double[] regularArrayIn) {
    return gdalJNI.Band_WriteRaster__SWIG_14(this.swigCPtr, this, xoff, yoff, xsize, ysize,
      buf_xsize, buf_ysize, buf_type, regularArrayIn);
  }

  public int WriteRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final double[] regularArrayIn,
    final int nPixelSpace) {
    return gdalJNI.Band_WriteRaster__SWIG_13(this.swigCPtr, this, xoff, yoff, xsize, ysize,
      buf_xsize, buf_ysize, buf_type, regularArrayIn, nPixelSpace);
  }

  public int WriteRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final double[] regularArrayIn,
    final int nPixelSpace, final int nLineSpace) {
    return gdalJNI.Band_WriteRaster__SWIG_12(this.swigCPtr, this, xoff, yoff, xsize, ysize,
      buf_xsize, buf_ysize, buf_type, regularArrayIn, nPixelSpace, nLineSpace);
  }

  public int WriteRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final float[] regularArrayIn) {
    return gdalJNI.Band_WriteRaster__SWIG_11(this.swigCPtr, this, xoff, yoff, xsize, ysize,
      buf_xsize, buf_ysize, buf_type, regularArrayIn);
  }

  public int WriteRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final float[] regularArrayIn,
    final int nPixelSpace) {
    return gdalJNI.Band_WriteRaster__SWIG_10(this.swigCPtr, this, xoff, yoff, xsize, ysize,
      buf_xsize, buf_ysize, buf_type, regularArrayIn, nPixelSpace);
  }

  public int WriteRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final float[] regularArrayIn,
    final int nPixelSpace, final int nLineSpace) {
    return gdalJNI.Band_WriteRaster__SWIG_9(this.swigCPtr, this, xoff, yoff, xsize, ysize,
      buf_xsize, buf_ysize, buf_type, regularArrayIn, nPixelSpace, nLineSpace);
  }

  public int WriteRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final int[] regularArrayIn) {
    return gdalJNI.Band_WriteRaster__SWIG_8(this.swigCPtr, this, xoff, yoff, xsize, ysize,
      buf_xsize, buf_ysize, buf_type, regularArrayIn);
  }

  public int WriteRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final int[] regularArrayIn,
    final int nPixelSpace) {
    return gdalJNI.Band_WriteRaster__SWIG_7(this.swigCPtr, this, xoff, yoff, xsize, ysize,
      buf_xsize, buf_ysize, buf_type, regularArrayIn, nPixelSpace);
  }

  public int WriteRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final int[] regularArrayIn,
    final int nPixelSpace, final int nLineSpace) {
    return gdalJNI.Band_WriteRaster__SWIG_6(this.swigCPtr, this, xoff, yoff, xsize, ysize,
      buf_xsize, buf_ysize, buf_type, regularArrayIn, nPixelSpace, nLineSpace);
  }

  public int WriteRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final short[] regularArrayIn) {
    return gdalJNI.Band_WriteRaster__SWIG_5(this.swigCPtr, this, xoff, yoff, xsize, ysize,
      buf_xsize, buf_ysize, buf_type, regularArrayIn);
  }

  public int WriteRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final short[] regularArrayIn,
    final int nPixelSpace) {
    return gdalJNI.Band_WriteRaster__SWIG_4(this.swigCPtr, this, xoff, yoff, xsize, ysize,
      buf_xsize, buf_ysize, buf_type, regularArrayIn, nPixelSpace);
  }

  public int WriteRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type, final short[] regularArrayIn,
    final int nPixelSpace, final int nLineSpace) {
    return gdalJNI.Band_WriteRaster__SWIG_3(this.swigCPtr, this, xoff, yoff, xsize, ysize,
      buf_xsize, buf_ysize, buf_type, regularArrayIn, nPixelSpace, nLineSpace);
  }

  public int WriteRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_type, final int[] array) {
    return WriteRaster(xoff, yoff, xsize, ysize, xsize, ysize, buf_type, array);
  }

  public int WriteRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_type, final short[] array) {
    return WriteRaster(xoff, yoff, xsize, ysize, xsize, ysize, buf_type, array);
  }

  public int WriteRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final int[] array) {
    return WriteRaster(xoff, yoff, xsize, ysize, xsize, ysize, gdalconstConstants.GDT_Int32, array);
  }

  public int WriteRaster(final int xoff, final int yoff, final int xsize, final int ysize,
    final short[] array) {
    return WriteRaster(xoff, yoff, xsize, ysize, xsize, ysize, gdalconstConstants.GDT_Int16, array);
  }

  public int WriteRaster_Direct(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type,
    final java.nio.ByteBuffer nioBuffer) {
    return gdalJNI.Band_WriteRaster_Direct__SWIG_2(this.swigCPtr, this, xoff, yoff, xsize, ysize,
      buf_xsize, buf_ysize, buf_type, nioBuffer);
  }

  public int WriteRaster_Direct(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type,
    final java.nio.ByteBuffer nioBuffer, final int nPixelSpace) {
    return gdalJNI.Band_WriteRaster_Direct__SWIG_1(this.swigCPtr, this, xoff, yoff, xsize, ysize,
      buf_xsize, buf_ysize, buf_type, nioBuffer, nPixelSpace);
  }

  public int WriteRaster_Direct(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final int buf_type,
    final java.nio.ByteBuffer nioBuffer, final int nPixelSpace, final int nLineSpace) {
    return gdalJNI.Band_WriteRaster_Direct__SWIG_0(this.swigCPtr, this, xoff, yoff, xsize, ysize,
      buf_xsize, buf_ysize, buf_type, nioBuffer, nPixelSpace, nLineSpace);
  }

  public int WriteRaster_Direct(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_xsize, final int buf_ysize, final java.nio.ByteBuffer nioBuffer) {
    return WriteRaster_Direct(xoff, yoff, xsize, ysize, buf_xsize, buf_ysize,
      gdalconstConstants.GDT_Byte, nioBuffer);
  }

  public int WriteRaster_Direct(final int xoff, final int yoff, final int xsize, final int ysize,
    final int buf_type, final java.nio.ByteBuffer nioBuffer) {
    return WriteRaster_Direct(xoff, yoff, xsize, ysize, xsize, ysize, buf_type, nioBuffer);
  }

  public int WriteRaster_Direct(final int xoff, final int yoff, final int xsize, final int ysize,
    final java.nio.ByteBuffer nioBuffer) {
    return WriteRaster_Direct(xoff, yoff, xsize, ysize, xsize, ysize, gdalconstConstants.GDT_Byte,
      nioBuffer);
  }

}
