/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package org.gdal.ogr;

import org.gdal.osr.SpatialReference;

public class Layer {
  protected static long getCPtr(final Layer obj) {
    return obj == null ? 0 : obj.swigCPtr;
  }

  protected static long getCPtrAndDisown(final Layer obj) {
    if (obj != null) {
      obj.swigCMemOwn = false;
    }
    return getCPtr(obj);
  }

  private long swigCPtr;

  protected boolean swigCMemOwn;

  protected Layer(final long cPtr, final boolean cMemoryOwn) {
    if (cPtr == 0) {
      throw new RuntimeException();
    }
    this.swigCMemOwn = cMemoryOwn;
    this.swigCPtr = cPtr;
  }

  /* Ensure that the GC doesn't collect any parent instance set from Java */
  protected void addReference(final Object reference) {
  }

  public int AlterFieldDefn(final int iField, final FieldDefn field_def, final int nFlags) {
    return ogrJNI.Layer_AlterFieldDefn(this.swigCPtr, this, iField, FieldDefn.getCPtr(field_def),
      field_def, nFlags);
  }

  public int Clip(final Layer method_layer, final Layer result_layer) {
    return ogrJNI.Layer_Clip__SWIG_3(this.swigCPtr, this, Layer.getCPtr(method_layer),
      method_layer, Layer.getCPtr(result_layer), result_layer);
  }

  public int Clip(final Layer method_layer, final Layer result_layer, final java.util.Vector options) {
    return ogrJNI.Layer_Clip__SWIG_2(this.swigCPtr, this, Layer.getCPtr(method_layer),
      method_layer, Layer.getCPtr(result_layer), result_layer, options);
  }

  public int Clip(final Layer method_layer, final Layer result_layer,
    final java.util.Vector options, final ProgressCallback callback) {
    return ogrJNI.Layer_Clip__SWIG_0(this.swigCPtr, this, Layer.getCPtr(method_layer),
      method_layer, Layer.getCPtr(result_layer), result_layer, options, callback);
  }

  public int CommitTransaction() {
    return ogrJNI.Layer_CommitTransaction(this.swigCPtr, this);
  }

  public int CreateFeature(final Feature feature) {
    return ogrJNI.Layer_CreateFeature(this.swigCPtr, this, Feature.getCPtr(feature), feature);
  }

  public int CreateField(final FieldDefn field_def) {
    return ogrJNI.Layer_CreateField__SWIG_1(this.swigCPtr, this, FieldDefn.getCPtr(field_def),
      field_def);
  }

  public int CreateField(final FieldDefn field_def, final int approx_ok) {
    return ogrJNI.Layer_CreateField__SWIG_0(this.swigCPtr, this, FieldDefn.getCPtr(field_def),
      field_def, approx_ok);
  }

  public int CreateGeomField(final GeomFieldDefn field_def) {
    return ogrJNI.Layer_CreateGeomField__SWIG_1(this.swigCPtr, this,
      GeomFieldDefn.getCPtr(field_def), field_def);
  }

  public int CreateGeomField(final GeomFieldDefn field_def, final int approx_ok) {
    return ogrJNI.Layer_CreateGeomField__SWIG_0(this.swigCPtr, this,
      GeomFieldDefn.getCPtr(field_def), field_def, approx_ok);
  }

  public synchronized void delete() {
    if (this.swigCPtr != 0) {
      if (this.swigCMemOwn) {
        this.swigCMemOwn = false;
        throw new UnsupportedOperationException("C++ destructor does not have public access");
      }
      this.swigCPtr = 0;
    }
  }

  public int DeleteFeature(final int fid) {
    return ogrJNI.Layer_DeleteFeature(this.swigCPtr, this, fid);
  }

  public int DeleteField(final int iField) {
    return ogrJNI.Layer_DeleteField(this.swigCPtr, this, iField);
  }

  @Override
  public boolean equals(final Object obj) {
    boolean equal = false;
    if (obj instanceof Layer) {
      equal = ((Layer)obj).swigCPtr == this.swigCPtr;
    }
    return equal;
  }

  public int Erase(final Layer method_layer, final Layer result_layer) {
    return ogrJNI.Layer_Erase__SWIG_3(this.swigCPtr, this, Layer.getCPtr(method_layer),
      method_layer, Layer.getCPtr(result_layer), result_layer);
  }

  public int Erase(final Layer method_layer, final Layer result_layer,
    final java.util.Vector options) {
    return ogrJNI.Layer_Erase__SWIG_2(this.swigCPtr, this, Layer.getCPtr(method_layer),
      method_layer, Layer.getCPtr(result_layer), result_layer, options);
  }

  public int Erase(final Layer method_layer, final Layer result_layer,
    final java.util.Vector options, final ProgressCallback callback) {
    return ogrJNI.Layer_Erase__SWIG_0(this.swigCPtr, this, Layer.getCPtr(method_layer),
      method_layer, Layer.getCPtr(result_layer), result_layer, options, callback);
  }

  public int FindFieldIndex(final String pszFieldName, final int bExactMatch) {
    return ogrJNI.Layer_FindFieldIndex(this.swigCPtr, this, pszFieldName, bExactMatch);
  }

  public double[] GetExtent() {
    return GetExtent(true);
  }

  public double[] GetExtent(final boolean force) {
    final double[] argout = new double[4];
    try {
      final int ret = GetExtent(argout, force ? 1 : 0);
      return ret == 0 ? argout : null;
    } catch (final RuntimeException e) {
      return null;
    }
  }

  public int GetExtent(final double[] argout, final int force) {
    return ogrJNI.Layer_GetExtent(this.swigCPtr, this, argout, force);
  }

  public Feature GetFeature(final int fid) {
    final long cPtr = ogrJNI.Layer_GetFeature(this.swigCPtr, this, fid);
    return cPtr == 0 ? null : new Feature(cPtr, true);
  }

  public int GetFeatureCount() {
    return ogrJNI.Layer_GetFeatureCount__SWIG_1(this.swigCPtr, this);
  }

  public int GetFeatureCount(final int force) {
    return ogrJNI.Layer_GetFeatureCount__SWIG_0(this.swigCPtr, this, force);
  }

  public long GetFeaturesRead() {
    return ogrJNI.Layer_GetFeaturesRead(this.swigCPtr, this);
  }

  public String GetFIDColumn() {
    return ogrJNI.Layer_GetFIDColumn(this.swigCPtr, this);
  }

  public String GetGeometryColumn() {
    return ogrJNI.Layer_GetGeometryColumn(this.swigCPtr, this);
  }

  public int GetGeomType() {
    return ogrJNI.Layer_GetGeomType(this.swigCPtr, this);
  }

  public FeatureDefn GetLayerDefn() {
    final long cPtr = ogrJNI.Layer_GetLayerDefn(this.swigCPtr, this);
    FeatureDefn ret = null;
    if (cPtr != 0) {
      ret = new FeatureDefn(cPtr, false);
      ret.addReference(this);
    }
    return ret;
  }

  public String GetName() {
    return ogrJNI.Layer_GetName(this.swigCPtr, this);
  }

  public Feature GetNextFeature() {
    final long cPtr = ogrJNI.Layer_GetNextFeature(this.swigCPtr, this);
    return cPtr == 0 ? null : new Feature(cPtr, true);
  }

  public int GetRefCount() {
    return ogrJNI.Layer_GetRefCount(this.swigCPtr, this);
  }

  public Geometry GetSpatialFilter() {
    final long cPtr = ogrJNI.Layer_GetSpatialFilter(this.swigCPtr, this);
    Geometry ret = null;
    if (cPtr != 0) {
      ret = new Geometry(cPtr, false);
      ret.addReference(this);
    }
    return ret;
  }

  public SpatialReference GetSpatialRef() {
    final long cPtr = ogrJNI.Layer_GetSpatialRef(this.swigCPtr, this);
    return cPtr == 0 ? null : new SpatialReference(cPtr, true);
  }

  public StyleTable GetStyleTable() {
    final long cPtr = ogrJNI.Layer_GetStyleTable(this.swigCPtr, this);
    return cPtr == 0 ? null : new StyleTable(cPtr, false);
  }

  @Override
  public int hashCode() {
    return (int)this.swigCPtr;
  }

  public int Identity(final Layer method_layer, final Layer result_layer) {
    return ogrJNI.Layer_Identity__SWIG_3(this.swigCPtr, this, Layer.getCPtr(method_layer),
      method_layer, Layer.getCPtr(result_layer), result_layer);
  }

  public int Identity(final Layer method_layer, final Layer result_layer,
    final java.util.Vector options) {
    return ogrJNI.Layer_Identity__SWIG_2(this.swigCPtr, this, Layer.getCPtr(method_layer),
      method_layer, Layer.getCPtr(result_layer), result_layer, options);
  }

  public int Identity(final Layer method_layer, final Layer result_layer,
    final java.util.Vector options, final ProgressCallback callback) {
    return ogrJNI.Layer_Identity__SWIG_0(this.swigCPtr, this, Layer.getCPtr(method_layer),
      method_layer, Layer.getCPtr(result_layer), result_layer, options, callback);
  }

  public int Intersection(final Layer method_layer, final Layer result_layer) {
    return ogrJNI.Layer_Intersection__SWIG_3(this.swigCPtr, this, Layer.getCPtr(method_layer),
      method_layer, Layer.getCPtr(result_layer), result_layer);
  }

  public int Intersection(final Layer method_layer, final Layer result_layer,
    final java.util.Vector options) {
    return ogrJNI.Layer_Intersection__SWIG_2(this.swigCPtr, this, Layer.getCPtr(method_layer),
      method_layer, Layer.getCPtr(result_layer), result_layer, options);
  }

  public int Intersection(final Layer method_layer, final Layer result_layer,
    final java.util.Vector options, final ProgressCallback callback) {
    return ogrJNI.Layer_Intersection__SWIG_0(this.swigCPtr, this, Layer.getCPtr(method_layer),
      method_layer, Layer.getCPtr(result_layer), result_layer, options, callback);
  }

  public int ReorderField(final int iOldFieldPos, final int iNewFieldPos) {
    return ogrJNI.Layer_ReorderField(this.swigCPtr, this, iOldFieldPos, iNewFieldPos);
  }

  public int ReorderFields(final int[] nList) {
    return ogrJNI.Layer_ReorderFields(this.swigCPtr, this, nList);
  }

  public void ResetReading() {
    ogrJNI.Layer_ResetReading(this.swigCPtr, this);
  }

  public int RollbackTransaction() {
    return ogrJNI.Layer_RollbackTransaction(this.swigCPtr, this);
  }

  public int SetAttributeFilter(final String filter_string) {
    return ogrJNI.Layer_SetAttributeFilter(this.swigCPtr, this, filter_string);
  }

  public int SetFeature(final Feature feature) {
    return ogrJNI.Layer_SetFeature(this.swigCPtr, this, Feature.getCPtr(feature), feature);
  }

  public int SetIgnoredFields(final java.util.Vector options) {
    return ogrJNI.Layer_SetIgnoredFields(this.swigCPtr, this, options);
  }

  public int SetNextByIndex(final int new_index) {
    return ogrJNI.Layer_SetNextByIndex(this.swigCPtr, this, new_index);
  }

  public void SetSpatialFilter(final Geometry filter) {
    ogrJNI.Layer_SetSpatialFilter__SWIG_0(this.swigCPtr, this, Geometry.getCPtr(filter), filter);
  }

  public void SetSpatialFilter(final int iGeomField, final Geometry filter) {
    ogrJNI.Layer_SetSpatialFilter__SWIG_1(this.swigCPtr, this, iGeomField,
      Geometry.getCPtr(filter), filter);
  }

  public void SetSpatialFilterRect(final double minx, final double miny, final double maxx,
    final double maxy) {
    ogrJNI.Layer_SetSpatialFilterRect__SWIG_0(this.swigCPtr, this, minx, miny, maxx, maxy);
  }

  public void SetSpatialFilterRect(final int iGeomField, final double minx, final double miny,
    final double maxx, final double maxy) {
    ogrJNI.Layer_SetSpatialFilterRect__SWIG_1(this.swigCPtr, this, iGeomField, minx, miny, maxx,
      maxy);
  }

  public void SetStyleTable(final StyleTable table) {
    ogrJNI.Layer_SetStyleTable(this.swigCPtr, this, StyleTable.getCPtr(table), table);
  }

  public int StartTransaction() {
    return ogrJNI.Layer_StartTransaction(this.swigCPtr, this);
  }

  public int SymDifference(final Layer method_layer, final Layer result_layer) {
    return ogrJNI.Layer_SymDifference__SWIG_3(this.swigCPtr, this, Layer.getCPtr(method_layer),
      method_layer, Layer.getCPtr(result_layer), result_layer);
  }

  public int SymDifference(final Layer method_layer, final Layer result_layer,
    final java.util.Vector options) {
    return ogrJNI.Layer_SymDifference__SWIG_2(this.swigCPtr, this, Layer.getCPtr(method_layer),
      method_layer, Layer.getCPtr(result_layer), result_layer, options);
  }

  public int SymDifference(final Layer method_layer, final Layer result_layer,
    final java.util.Vector options, final ProgressCallback callback) {
    return ogrJNI.Layer_SymDifference__SWIG_0(this.swigCPtr, this, Layer.getCPtr(method_layer),
      method_layer, Layer.getCPtr(result_layer), result_layer, options, callback);
  }

  public int SyncToDisk() {
    return ogrJNI.Layer_SyncToDisk(this.swigCPtr, this);
  }

  public boolean TestCapability(final String cap) {
    return ogrJNI.Layer_TestCapability(this.swigCPtr, this, cap);
  }

  public int Union(final Layer method_layer, final Layer result_layer) {
    return ogrJNI.Layer_Union__SWIG_3(this.swigCPtr, this, Layer.getCPtr(method_layer),
      method_layer, Layer.getCPtr(result_layer), result_layer);
  }

  public int Union(final Layer method_layer, final Layer result_layer,
    final java.util.Vector options) {
    return ogrJNI.Layer_Union__SWIG_2(this.swigCPtr, this, Layer.getCPtr(method_layer),
      method_layer, Layer.getCPtr(result_layer), result_layer, options);
  }

  public int Union(final Layer method_layer, final Layer result_layer,
    final java.util.Vector options, final ProgressCallback callback) {
    return ogrJNI.Layer_Union__SWIG_0(this.swigCPtr, this, Layer.getCPtr(method_layer),
      method_layer, Layer.getCPtr(result_layer), result_layer, options, callback);
  }

  public int Update(final Layer method_layer, final Layer result_layer) {
    return ogrJNI.Layer_Update__SWIG_3(this.swigCPtr, this, Layer.getCPtr(method_layer),
      method_layer, Layer.getCPtr(result_layer), result_layer);
  }

  public int Update(final Layer method_layer, final Layer result_layer,
    final java.util.Vector options) {
    return ogrJNI.Layer_Update__SWIG_2(this.swigCPtr, this, Layer.getCPtr(method_layer),
      method_layer, Layer.getCPtr(result_layer), result_layer, options);
  }

  public int Update(final Layer method_layer, final Layer result_layer,
    final java.util.Vector options, final ProgressCallback callback) {
    return ogrJNI.Layer_Update__SWIG_0(this.swigCPtr, this, Layer.getCPtr(method_layer),
      method_layer, Layer.getCPtr(result_layer), result_layer, options, callback);
  }

}
