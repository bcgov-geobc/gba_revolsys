/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 3.0.5
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.revolsys.gis.esri.gdb.file.capi.swig;

public class Geodatabase {
  protected static long getCPtr(final Geodatabase obj) {
    return obj == null ? 0 : obj.swigCPtr;
  }

  protected boolean swigCMemOwn;

  private long swigCPtr;

  public Geodatabase() {
    this(EsriFileGdbJNI.new_Geodatabase(), true);
  }

  protected Geodatabase(final long cPtr, final boolean cMemoryOwn) {
    this.swigCMemOwn = cMemoryOwn;
    this.swigCPtr = cPtr;
  }

  public void alterDomain(final String domainDefinition) {
    EsriFileGdbJNI.Geodatabase_alterDomain(this.swigCPtr, this, domainDefinition);
  }

  public void closeTable(final Table table) {
    EsriFileGdbJNI.Geodatabase_closeTable(this.swigCPtr, this, Table.getCPtr(table), table);
  }

  public int CompactDatabase() {
    return EsriFileGdbJNI.Geodatabase_CompactDatabase(this.swigCPtr, this);
  }

  public void createDomain(final String domainDefinition) {
    EsriFileGdbJNI.Geodatabase_createDomain(this.swigCPtr, this, domainDefinition);
  }

  public void createFeatureDataset(final String featureDatasetDef) {
    EsriFileGdbJNI.Geodatabase_createFeatureDataset(this.swigCPtr, this, featureDatasetDef);
  }

  public Table createTable(final String tableDefinition, final String parent) {
    final long cPtr = EsriFileGdbJNI.Geodatabase_createTable(this.swigCPtr, this, tableDefinition,
      parent);
    return cPtr == 0 ? null : new Table(cPtr, true);
  }

  public synchronized void delete() {
    if (this.swigCPtr != 0) {
      if (this.swigCMemOwn) {
        this.swigCMemOwn = false;
        EsriFileGdbJNI.delete_Geodatabase(this.swigCPtr);
      }
      this.swigCPtr = 0;
    }
  }

  public int Delete(final String path, final String datasetType) {
    return EsriFileGdbJNI.Geodatabase_Delete(this.swigCPtr, this, path, datasetType);
  }

  public void deleteDomain(final String domainName) {
    EsriFileGdbJNI.Geodatabase_deleteDomain(this.swigCPtr, this, domainName);
  }

  @Override
  protected void finalize() {
  }

  public int GetChildDatasetDefinitions(final String parentPath, final String datasetType,
    final VectorOfString childDatasetDefs) {
    return EsriFileGdbJNI.Geodatabase_GetChildDatasetDefinitions(this.swigCPtr, this, parentPath,
      datasetType, VectorOfString.getCPtr(childDatasetDefs), childDatasetDefs);
  }

  public VectorOfWString getChildDatasets(final String parentPath, final String datasetType) {
    return new VectorOfWString(EsriFileGdbJNI.Geodatabase_getChildDatasets(this.swigCPtr, this,
      parentPath, datasetType), true);
  }

  public String getDatasetDefinition(final String path, final String datasetType) {
    return EsriFileGdbJNI.Geodatabase_getDatasetDefinition(this.swigCPtr, this, path, datasetType);
  }

  public String getDatasetDocumentation(final String path, final String datasetType) {
    return EsriFileGdbJNI.Geodatabase_getDatasetDocumentation(this.swigCPtr, this, path,
      datasetType);
  }

  public int GetDatasetRelationshipTypes(final VectorOfWString relationshipTypes) {
    return EsriFileGdbJNI.Geodatabase_GetDatasetRelationshipTypes(this.swigCPtr, this,
      VectorOfWString.getCPtr(relationshipTypes), relationshipTypes);
  }

  public int GetDatasetTypes(final VectorOfWString datasetTypes) {
    return EsriFileGdbJNI.Geodatabase_GetDatasetTypes(this.swigCPtr, this,
      VectorOfWString.getCPtr(datasetTypes), datasetTypes);
  }

  public String getDomainDefinition(final String domainName) {
    return EsriFileGdbJNI.Geodatabase_getDomainDefinition(this.swigCPtr, this, domainName);
  }

  public VectorOfWString getDomains() {
    return new VectorOfWString(EsriFileGdbJNI.Geodatabase_getDomains(this.swigCPtr, this), true);
  }

  public String getQueryName(final String path) {
    return EsriFileGdbJNI.Geodatabase_getQueryName(this.swigCPtr, this, path);
  }

  public int GetRelatedDatasetDefinitions(final String path, final String relType,
    final String datasetType, final VectorOfString relatedDatasetDefs) {
    return EsriFileGdbJNI.Geodatabase_GetRelatedDatasetDefinitions(this.swigCPtr, this, path,
      relType, datasetType, VectorOfString.getCPtr(relatedDatasetDefs), relatedDatasetDefs);
  }

  public int GetRelatedDatasets(final String path, final String relType, final String datasetType,
    final VectorOfWString relatedDatasets) {
    return EsriFileGdbJNI.Geodatabase_GetRelatedDatasets(this.swigCPtr, this, path, relType,
      datasetType, VectorOfWString.getCPtr(relatedDatasets), relatedDatasets);
  }

  public String getTableDefinition(final String path) {
    return EsriFileGdbJNI.Geodatabase_getTableDefinition(this.swigCPtr, this, path);
  }

  public int Move(final String path, final String newParentPath) {
    return EsriFileGdbJNI.Geodatabase_Move(this.swigCPtr, this, path, newParentPath);
  }

  public Table openTable(final String path) {
    final long cPtr = EsriFileGdbJNI.Geodatabase_openTable(this.swigCPtr, this, path);
    return cPtr == 0 ? null : new Table(cPtr, true);
  }

  public EnumRows query(final String sql, final boolean recycling) {
    final long cPtr = EsriFileGdbJNI.Geodatabase_query(this.swigCPtr, this, sql, recycling);
    return cPtr == 0 ? null : new EnumRows(cPtr, false);
  }

  public int Rename(final String path, final String datasetType, final String newName) {
    return EsriFileGdbJNI.Geodatabase_Rename(this.swigCPtr, this, path, datasetType, newName);
  }

}
